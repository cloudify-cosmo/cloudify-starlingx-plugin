tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint can be used to enroll both system controllers and subclouds.
  To discover a system controller's subclouds, use this blueprint to enroll
  the system controller, and then execute the discover_and_deploy workflow.
  To manually enroll a subcloud, provide the URL endpoint of the subcloud,
  and set region_name input to the name of the subcloud.

imports:
  - https://cloudify.co/spec/cloudify/5.2.0/types.yaml
  - plugin:cloudify-starlingx-plugin

blueprint_labels:

  csys-obj-type:
    values:
    - environment

  csys-env-type:
    values:
    - wrcp

labels:

  # These values are used to identify sites and parent deployments.
  # They will be filled automatically during installation of the blueprint.
  # For manual subcloud enrollment, the values need to be filled manually
  # in the UI.

  csys-obj-type:
    values:
     - environment

  csys-env-type:
    values: []

  csys-obj-parent:
    values: []

  csys-location-name:
    values: []

  csys-location-lat:
    values: []

  csys-location-long:
    values: []

  csys-wrcp-services:
    values: []

inputs:

  URL:
    type: string
    description: >
      The URL of the WRCP API endpoint. E.g. http://10.0.2.2:5000/v3.
      If only an IP or a hostname is provided,
      the plugin will add "http://" to the beginning of the URL,
      and ":5000/v3" to the end of the URL.

  User-secret:
    type: string
    description: >
      The name of the secret that contains the username,
      which will be used to authenticate with StarlingX endpoint.
    default: starlingx_username

  Password-secret:
    type: string
    description: >
      The name of the secret that contains the password,
      also known as api key,
      which will be used to authenticate with StarlingX endpoint.
    default: starlingx_api_key

  CA-secret:
    type: string
    description: >
      The contents of the CA Certificate.
    default: 'starlingx_cacert'

  insecure:
    type: boolean
    description: >
      True if to skip SSL verification.
    default: false

  region_name:
    type: string
    description: >
      The region that will be provided to starlingX API.
      RegionOne is used for System Controllers.
      Subclouds require the subcloud name to be provided.
    default: RegionOne

dsl_definitions:

  client_config: &client_config
    auth_url: { get_input: URL }
    username: { get_secret: { get_input: User-secret } }
    api_key: { get_secret: { get_input: Password-secret } }
    project_name: admin
    user_domain_name: Default
    project_domain_name: Default
    region_name: { get_input: region_name }
    cacert: { get_secret: { get_input: CA-secret } }
    insecure: {  get_input: insecure }

node_templates:

  wrcp:
    type: cloudify.nodes.starlingx.WRCP
    properties:
      client_config: *client_config

capabilities:

  wrcp-ip:
    description: The external endpoint of the application.
    value: { get_input: URL }

  wrcp-user-secret:
    description: the secret representing the wrcp access username
    value: { get_input: User-secret }

  wrcp-pass-secret:
    description: The secret representing the wrcp access password.
    value: { get_input: Password-secret }

  k8s-IP:
    description: The IP required to access its Kubernetes cluster.
    value: { get_attribute: [ wrcp, k8s_ip ] }

  k8s-service-account-token:
    description: The token required to access that k8s cluster.
    value: { get_attribute: [ wrcp, k8s_service_account_token ] }

  k8s-cert:
    description: The certificate required to access that k8s cluster.
    value: { get_attribute: [ wrcp, k8s_cert ] }

  openstack-ip:
    description: Optional, if open stack is supported. The IP for the Openstack management.
    value: { get_attribute: [ wrcp, openstack_ip ] }

  openstack-key:
    description: Optional, if open stack is supported. The access key for Openstack management
    value: { get_attribute: [ wrcp, openstack_key ] }
