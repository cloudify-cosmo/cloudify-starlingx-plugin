tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/5.2/types.yaml
  - plugin:cloudify-starlingx-plugin

inputs:

  # System Information
  uuid:
    type: string

  name:
    type: string

  description:
    type: string
    default: 'WRCS'

  distributed_cloud_role:
    type: string
    default: SystemController

  system_type:
    type: string
    default: Standard

  system_mode:
    type: string
    default: duplex

  # Authentication Secret Keys
  auth_url_key:
    type: string
    default: starlingx_auth_url

  username_key:
    type: string
    default: starlingx_username

  api_key:
    type: string
    default: starlingx_api_key

  project_name_key:
    type: string
    default: starlingx_project_name

  user_domain_name_key:
    type: string
    default: starlingx_user_domain_name

  project_domain_name_key:
    type: string
    default: starlingx_project_domain_name

  project_domain_id_key:
    type: string
    default: starlingx_project_domain_id

  region_name:
    type: string
    default: RegionOne

dsl_definitions:

  client_config: &client_config
    auth_url: { get_secret: { get_input: auth_url_key } }
    username: { get_secret: { get_input: username_key } }
    api_key: { get_secret: { get_input: api_key } }
    project_name: { get_secret: { get_input: project_name_key } }
    user_domain_name: { get_secret: { get_input: user_domain_name_key } }
    project_domain_name: { get_secret: { get_input: project_domain_name_key } }
    project_domain_id: { get_secret: { get_input: project_domain_id_key } }
    region_name: { get_input: region_name }

node_templates:

  wcrs:
    type: cloudify.nodes.starlingx.SystemController # This needs to be a single type.
    properties:
      client_config: *client_config
      resource_config:
        uuid: { get_input: uuid }
        name: { get_input: name }
        description: { get_input: description }
        distributed_cloud_role: { get_input: distributed_cloud_role }
        system_type: { get_input: system_type }
        system_mode: { get_input: system_mode }

capabilities: {}
outputs: {}
