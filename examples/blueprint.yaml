tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.2.0/types.yaml
  - plugin:cloudify-starlingx-plugin

blueprint_labels:

  csys-obj-type:
    values:
    - environment

  csys-env-type:
    values:
    - wrcp

labels:

  csys-obj-type:
    values:
     - environment

  csys-env-type:
    values: []

  csys-obj-parent:
    values: []

  csys-location-name:
    values: []

  csys-location-lat:
    values: []

  csys-location-long:
    values: []

  csys-wrcp-services:
    values: []

inputs:

#  Type: # Type
#    type: string
#    description: A user-defined label for the type of environment.
#    default: '' # 'Wind-River-Cloud-Platform-System-Controller' # Change inside the plugin as well.
#
#  parent:
#    type: string
#    description: The ID of the Controller managing this subcloud in case this is a manual subcloud installation.
#    default: 'NULL'

  IP:
    type: string

  User-secret:
    type: string
    default: starlingx_username

  Password-secret:
    type: string
    default: starlingx_api_key

  region_name:
    type: string
    default: RegionOne

dsl_definitions:

  client_config: &client_config
    auth_url: { get_input: IP }
    username: { get_secret: { get_input: User-secret } }
    api_key: { get_secret: { get_input: Password-secret } }
    project_name: admin
    user_domain_name: Default
    project_domain_name: default
    project_domain_id: default
    region_name: { get_input: region_name }

node_templates:

  wrcp:
    type: cloudify.nodes.starlingx.WRCP
    properties:
      client_config: *client_config

capabilities:

  wrcp-ip:
    description: The external endpoint of the application.
    value: { get_input: IP }

  wrcp-user-secret:
    description: the secret representing the wrcp access username
    value: { get_input: User-secret }

  wrcp-pass-secret:
    description: The secret representing the wrcp access password.
    value: { get_input: Password-secret }

  k8s-IP:
    description: The IP required to access its Kubernetes cluster.
    value: { get_attribute: [ wrcp, k8s_ip ] }

  k8s-service-account-token:
    description: The token required to access that k8s cluster.
    value: { get_attribute: [ wrcp, k8s_service_account_token ] }

  k8s-cert:
    description: The certificate required to access that k8s cluster.
    value: { get_attribute: [ wrcp, k8s_cert ] }

  openstack-ip:
    description: Optional, if open stack is supported. The IP for the Openstack management.
    value: { get_attribute: [ wrcp, openstack_ip ] }

  openstack-key:
    description: Optional, if open stack is supported. The access key for Openstack management
    value: { get_attribute: [ wrcp, openstack_key ] }
