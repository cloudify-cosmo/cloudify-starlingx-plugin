plugins:

  starlingx:
    executor: central_deployment_agent
    source: https://github.com/cloudify-cosmo/cloudify-starlingx-plugin/archive/0.0.1.zip
    package_name: cloudify-starlingx-plugin
    package_version: '0.0.1'

dsl_definitions:

  client_config: &client_config
    client_config:
      type: cloudify.types.starlingx.ClientConfig
      description: Your OpenStack client configuration.
      required: false

  # Every resource uses this property unless noted.
  external_resource: &external_resource
    use_external_resource:
      description: Indicate whether the resource exists or if Cloudify should create the resource, true if you are bringing an existing resource, false if you want cloudify to create it.
      type: boolean
      default: true

data_types:

  cloudify.types.starlingx.ClientConfig:
    # See: https://docs.openstack.org/python-openstackclient/pike/cli/man/openstack.html.
    properties:
      auth_url:
        type: string
        description: Your OpenStack Client Authorization URL.
        required: false
      username:
        type: string
        description: Your OpenStack username.
        required: false
      api_key:
        type: string
        description: Your OpenStack api_key.
        required: false
      project_name:
        type: string
        description: The name of your OpenStack project.
        required: false
      tenant_name:
        type: string
        description: The name of your OpenStack tenant.
        required: false
      region_name:
        type: string
        description: The region where you want this particular resource to be created.
        required: false
      user_domain_id:
        type: string
        description: The user domain id
        required: false
      project_domain_id:
        type: string
        description: The Project domain id
        required: false
      user_domain_name:
        description: Domain name to operate on.
        type: string
        required: false
      project_domain_name:
        description: Project domain name to operate on.
        type: string
        required: false
      insecure:
        description: If true, SSL validation is skipped.
        type: boolean
        required: false
        default: false
      cacert:
        description: Path to CA certificate to validate OpenStack's endpoint with.
        type: string
        required: false
      kwargs:
        description: >
          A dictionary of keys and values that is not validated
          but will override other values in the client config.
        default: {}

  cloudify.types.starlingx.System:
    properties: &system_defaults
      uuid:
        type: string
        description: The system unique system UUID. NOT USED. Prefer to use the resource_id node property.
        default: ''
      name:
        type: string
        description: The human readable name.
      description:
        type: string
        description: Free text description of the system.
      distributed_cloud_role:
        type: string
        description: The role of the system in a distributed cloud.
      system_type:
        type: string
        description: The type of system. Either standard or all-in-one.
      system_mode:
        type: string
        description: The mode the the system. Either simplex, duplex, or duplex-direct.
      location:
        type: string
        description: Textual description of the system.
        default: ''
      latitude:
        type: string
        description: Geo latitude
        default: ''
      longitude:
        type: string
        description: Geo longitude.
        default: ''

  cloudify.types.starlingx.StandaloneSystem:
    properties:
      <<: *system_defaults
      distributed_cloud_role:
        type: string
        description: The role of the system in a distributed cloud.
        default: null
      system_type:
        type: string
        description: The type of system. Either standard or all-in-one.
      system_mode:
        type: string
        description: The mode the the system. Either simplex, duplex, or duplex-direct.


  cloudify.types.starlingx.SystemController:
    properties:
      <<: *system_defaults
      distributed_cloud_role:
        type: string
        description: The role of the system in a distributed cloud.
        default: SystemController
      system_type:
        type: string
        description: The type of system. Either standard or all-in-one.
        default: Standard
      system_mode:
        type: string
        description: The mode the the system. Either simplex, duplex, or duplex-direct.

  cloudify.types.starlingx.Subcloud:
    properties:
      <<: *system_defaults
      distributed_cloud_role:
        type: string
        description: The role of the system in a distributed cloud.
        default: Subcloud
      system_type:
        type: string
        description: The type of system. Either standard or all-in-one.
        default: null
      system_mode:
        type: string
        description: The mode the the system. Either simplex, duplex, or duplex-direct.
        default: null

node_types:

  cloudify.nodes.starlingx.System:
    derived_from: cloudify.nodes.Root
    properties:
      <<: *external_resource
      <<: *client_config
      resource_config:
        type: cloudify.types.starlingx.System
    interfaces:
      cloudify.interfaces.lifecycle:
        poststart:
          implementation: starlingx.cloudify_starlingx.resources.controller.poststart

  cloudify.nodes.starlingx.StandaloneSystem:
    derived_from: cloudify.nodes.starlingx.System
    properties:
      <<: *external_resource
      <<: *client_config
      resource_config:
        type: cloudify.types.starlingx.StandaloneSystem

  cloudify.nodes.starlingx.SystemController:
    derived_from: cloudify.nodes.starlingx.System
    properties:
      <<: *external_resource
      <<: *client_config
      resource_config:
        type: cloudify.types.starlingx.SystemController

  cloudify.nodes.starlingx.Subcloud:
    derived_from: cloudify.nodes.starlingx.System
    properties:
      <<: *external_resource
      <<: *client_config
      resource_config:
        type: cloudify.types.starlingx.Subcloud

relationships:

  cloudify.relationships.starlingx.subcloud_connected_to_system_controller:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: starlingx.cloudify_starlingx.resources.subcloud.preconfigure

#workflows:
#
#  discover_subclouds:
#    mapping: starlingx.cloudify_starlingx.workflows.discover.discover_subclouds
#    parameters:
#      node_id:
#        description: The name of the node template of the cloudify.nodes.starlingx.Controller node, whose subclouds you wish to discover.
#        type: string
#        default: ''
